name: Tests

on:
  push:
    branches:
      - main
      - staging
  pull_request:
    branches:
      - main
      - staging

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    env:
      NODE_ENV: test
      NODE_OPTIONS: --experimental-vm-modules
      DATABASE_URL: postgresql://test:test@localhost:5432/test_db

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        id: tests
        run: npm test
        continue-on-error: true

      - name: Upload coverage reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 30

      - name: Generate test summary
        if: always()
        run: |
          echo "## Test Results" >> $GITHUB_STEP_SUMMARY
          if [ "${{ steps.tests.outcome }}" == "success" ]; then
            echo "✅ All tests passed successfully!" >> $GITHUB_STEP_SUMMARY
            if [ -f coverage/coverage-summary.json ]; then
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "### Coverage Report" >> $GITHUB_STEP_SUMMARY
              echo "Coverage reports have been uploaded as artifacts." >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "❌ Some tests failed. Please review the logs above." >> $GITHUB_STEP_SUMMARY
          fi

      - name: Annotate test failures
        if: steps.tests.outcome == 'failure'
        run: |
          echo "::error::Tests failed. Please check the test output for details."
          exit 1
